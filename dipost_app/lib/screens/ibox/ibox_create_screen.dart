import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../../models/ibox.dart';
import '../../../providers/ibox_provider.dart';
import '../../../widgets/common/app_bar.dart';

class IBoxCreateScreen extends StatefulWidget {
  const IBoxCreateScreen({Key? key}) : super(key: key);

  @override
  _IBoxCreateScreenState createState() => _IBoxCreateScreenState();
}

class _IBoxCreateScreenState extends State<IBoxCreateScreen> {
  final _formKey = GlobalKey<FormState>();
  final _adresseController = TextEditingController();
  final _capaciteController = TextEditingController();
  String _selectedStatut = IBox.statutsPossibles[0];

  @override
  void dispose() {
    _adresseController.dispose();
    _capaciteController.dispose();
    super.dispose();
  }

  void _createIBox(IBoxProvider iboxProvider) async {
    if (_formKey.currentState!.validate()) {
      final newIBox = IBox(
        id: 0, // Will be generated by the database
        adresse: _adresseController.text.trim(),
        capacite: int.parse(_capaciteController.text.trim()),
        statut: _selectedStatut,
        createdAt: DateTime.now(),
      );

      final success = await iboxProvider.addIBox(newIBox);

      if (success == true) {
        if (mounted) {
          Navigator.pop(context);
        }
      } else {
        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(content: Text('Erreur lors de la création')),
          );
        }
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    final iboxProvider = Provider.of<IBoxProvider>(context, listen: false);

    return Scaffold(
      appBar: AppBar(title: const Text('Créer une iBox'),
      backgroundColor: const Color.fromARGB(255, 119, 5, 154)),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: SingleChildScrollView(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                TextFormField(
                  controller: _adresseController,
                  decoration: const InputDecoration(labelText: 'Adresse'),
                  validator: (value) {
                    if (value == null || value.trim().isEmpty) {
                      return 'Veuillez entrer une adresse';
                    }
                    return null;
                  },
                ),
                const SizedBox(height: 16),
                TextFormField(
                  controller: _capaciteController,
                  decoration: const InputDecoration(labelText: 'Capacité'),
                  keyboardType: TextInputType.number,
                  validator: (value) {
                    if (value == null || value.trim().isEmpty) {
                      return 'Veuillez entrer une capacité';
                    }
                    if (int.tryParse(value.trim()) == null) {
                      return 'Veuillez entrer un nombre valide';
                    }
                    return null;
                  },
                ),
                const SizedBox(height: 16),
                DropdownButtonFormField<String>(
                  value: _selectedStatut,
                  items: IBox.statutsPossibles.map((statut) {
                    return DropdownMenuItem(
                      value: statut,
                      child: Text(statut),
                    );
                  }).toList(),
                  onChanged: (value) {
                    if (value != null) {
                      setState(() {
                        _selectedStatut = value;
                      });
                    }
                  },
                  decoration: const InputDecoration(labelText: 'Statut'),
                ),
                const SizedBox(height: 20),
                ElevatedButton(
                  onPressed: () => _createIBox(iboxProvider),
                  child: const Text('Créer iBox'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}